/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package paquete;

import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.sound.sampled.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Random;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author AORUS
 */
public final class Form extends javax.swing.JFrame {

    Ahorcado juego;              //variable de la clase Ahorcado que representa el juego.
    BufferedImage[] sprites;     //arreglo en el que se almacenan los sprites de la animación.
    ImageIcon icono;             //icono utilizado para asignar sprite en el label de ahorcado y así actualizar la animación
    int numIntentosMAX = 7;      //numero de intentos maximo, limitado por el número máximo de sprites de la animación.
    boolean pistaSelect = false;   //boolean utilizado para que el jugador solamente pueda presionar el botón de pista una vez
    String[] pista;              //arreglo de String que respresenta una pista adicional al jugador

    public Form() {
        initComponents();
        // Centrar el formulario en la pantalla
        setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.decode("#e0e1dd"));
        /*
        Al iniciar el juego el usuario no puede jugar mientras no haya dado clic en iniciar es por esto la 
        desabilitacion de los botones 
         */
        DeshabilitarBotones();

        lblAyuda.setVisible(false);
        lblPista.setVisible(false);

        try {

            /*Se utiliza el paquete ImageIO de Java para leer las imagenes almacenadas en la carpeta sprites del proyecto, cada sprite se almacena 
            en un arreglo de sprites tipo BufferedImage
             */
            sprites = new BufferedImage[7];
            sprites[0] = ImageIO.read(new File("sprites/1.png"));
            sprites[1] = ImageIO.read(new File("sprites/2.png"));
            sprites[2] = ImageIO.read(new File("sprites/3.png"));
            sprites[3] = ImageIO.read(new File("sprites/4.png"));
            sprites[4] = ImageIO.read(new File("sprites/5.png"));
            sprites[5] = ImageIO.read(new File("sprites/6.png"));
            sprites[6] = ImageIO.read(new File("sprites/7.png"));

            icono = new ImageIcon(sprites[0]); //Se utiliza el paquete ImageIcon para almacenar imagenes del arreglo y crear un icono
            ahorcado.setIcon(icono);       //se utiliza el icono creado para aplicarlo en el label de ahorcado

            ImageIcon formLogo = new ImageIcon("icono.png");    //se lee el icono de la aplicacion
            setIconImage(formLogo.getImage());                    //se establece el icono del formulario

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        btnG = new javax.swing.JButton();
        btnA = new javax.swing.JButton();
        btnB = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnD = new javax.swing.JButton();
        btnF = new javax.swing.JButton();
        btnM = new javax.swing.JButton();
        btnH = new javax.swing.JButton();
        btnI = new javax.swing.JButton();
        btnJ = new javax.swing.JButton();
        btnK = new javax.swing.JButton();
        btnL = new javax.swing.JButton();
        btnR = new javax.swing.JButton();
        btnN = new javax.swing.JButton();
        btnÑ = new javax.swing.JButton();
        btnO = new javax.swing.JButton();
        btnP = new javax.swing.JButton();
        btnQ = new javax.swing.JButton();
        btnE = new javax.swing.JButton();
        btnS = new javax.swing.JButton();
        btnT = new javax.swing.JButton();
        btnX = new javax.swing.JButton();
        btnZ = new javax.swing.JButton();
        btnY = new javax.swing.JButton();
        btnU = new javax.swing.JButton();
        btnV = new javax.swing.JButton();
        btnW = new javax.swing.JButton();
        btnAyuda = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();
        btnRetroceder = new javax.swing.JButton();
        lblAyuda = new javax.swing.JLabel();
        txtArea = new javax.swing.JLabel();
        ahorcado = new javax.swing.JLabel();
        btnPista = new javax.swing.JButton();
        lblPista = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Juego del Ahorcado");
        setBackground(new java.awt.Color(224, 225, 221));

        btnG.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnG.setText("G");
        btnG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGActionPerformed(evt);
            }
        });

        btnA.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnA.setText("A");
        btnA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAMouseClicked(evt);
            }
        });
        btnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAActionPerformed(evt);
            }
        });

        btnB.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnB.setText("B");
        btnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnC.setText("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnD.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnD.setText("D");
        btnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDActionPerformed(evt);
            }
        });

        btnF.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnF.setText("F");
        btnF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFActionPerformed(evt);
            }
        });

        btnM.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnM.setText("M");
        btnM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMActionPerformed(evt);
            }
        });

        btnH.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnH.setText("H");
        btnH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHActionPerformed(evt);
            }
        });

        btnI.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnI.setText("I");
        btnI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIActionPerformed(evt);
            }
        });

        btnJ.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnJ.setText("J");
        btnJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJActionPerformed(evt);
            }
        });

        btnK.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnK.setText("K");
        btnK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKActionPerformed(evt);
            }
        });

        btnL.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnL.setText("L");
        btnL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLActionPerformed(evt);
            }
        });

        btnR.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnR.setText("R");
        btnR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRActionPerformed(evt);
            }
        });

        btnN.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnN.setText("N");
        btnN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNActionPerformed(evt);
            }
        });

        btnÑ.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnÑ.setText("Ñ");
        btnÑ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnÑActionPerformed(evt);
            }
        });

        btnO.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnO.setText("O");
        btnO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOActionPerformed(evt);
            }
        });

        btnP.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnP.setText("P");
        btnP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPActionPerformed(evt);
            }
        });

        btnQ.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnQ.setText("Q");
        btnQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQActionPerformed(evt);
            }
        });

        btnE.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnE.setText("E");
        btnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEActionPerformed(evt);
            }
        });

        btnS.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnS.setText("S");
        btnS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSActionPerformed(evt);
            }
        });

        btnT.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnT.setText("T");
        btnT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTActionPerformed(evt);
            }
        });

        btnX.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnX.setText("X");
        btnX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXActionPerformed(evt);
            }
        });

        btnZ.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnZ.setText("Z");
        btnZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZActionPerformed(evt);
            }
        });

        btnY.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnY.setText("Y");
        btnY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYActionPerformed(evt);
            }
        });

        btnU.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnU.setText("U");
        btnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUActionPerformed(evt);
            }
        });

        btnV.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnV.setText("V");
        btnV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVActionPerformed(evt);
            }
        });

        btnW.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        btnW.setText("W");
        btnW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWActionPerformed(evt);
            }
        });

        btnAyuda.setBackground(new java.awt.Color(119, 141, 169));
        btnAyuda.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        btnAyuda.setText("Ayuda");
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });

        btnIniciar.setBackground(new java.awt.Color(119, 141, 169));
        btnIniciar.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        btnRetroceder.setBackground(new java.awt.Color(119, 141, 169));
        btnRetroceder.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        btnRetroceder.setText("Retroceder");
        btnRetroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrocederActionPerformed(evt);
            }
        });

        lblAyuda.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblAyuda.setText("Ayuda");

        txtArea.setFont(new java.awt.Font("Courier New", 1, 36)); // NOI18N

        btnPista.setBackground(new java.awt.Color(119, 141, 169));
        btnPista.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        btnPista.setText("Pista");
        btnPista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPistaActionPerformed(evt);
            }
        });

        lblPista.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        lblPista.setText("Pista");

        btnLimpiar.setBackground(new java.awt.Color(119, 141, 169));
        btnLimpiar.setFont(new java.awt.Font("Courier New", 0, 15)); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnÑ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnO, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnP, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnQ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnT, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnU, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnV, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnW, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnX, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnRetroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnY, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnZ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnPista, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnH, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnI, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnJ, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnK, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnM, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnN, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnE, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnF, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnG, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ahorcado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblAyuda, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                                    .addComponent(lblPista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(61, 61, 61))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(24, Short.MAX_VALUE)
                        .addComponent(ahorcado, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(lblAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(lblPista, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnB, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnD, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnE, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnG, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnI, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnH, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnJ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnK, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnL, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnN, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnR, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnÑ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnO, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnS, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnY, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnU, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnV, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnW, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnX, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnZ, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAyuda, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPista, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBActionPerformed
        Intento("B", btnB);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnBActionPerformed

    private void btnIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIActionPerformed
        Intento("I", btnI);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnIActionPerformed

    private void btnÑActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnÑActionPerformed
        Intento("Ñ", btnÑ);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnÑActionPerformed

    private void btnRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRActionPerformed
        Intento("R", btnR);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnRActionPerformed

    private void btnYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYActionPerformed
        Intento("Y", btnY);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnYActionPerformed

    private void btnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUActionPerformed
        Intento("U", btnU);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnUActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed

        if (juego != null) {
            lblAyuda.setVisible(true);
            lblAyuda.setText(Arrays.toString(juego.palabraAux));
        } else {
            JOptionPane.showMessageDialog(null, "Ni siquiera ha empezado el juego...", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnAyudaActionPerformed

    private void btnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAActionPerformed
        Intento("A", btnA);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnAActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        Intento("C", btnC);
        txtArea.setText(juego.Palabra());
    }//GEN-LAST:event_btnCActionPerformed

    private void btnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDActionPerformed
        Intento("D", btnD);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnDActionPerformed

    private void btnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEActionPerformed
        Intento("E", btnE);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnEActionPerformed

    private void btnFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFActionPerformed
        Intento("F", btnF);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnFActionPerformed

    private void btnOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOActionPerformed
        Intento("O", btnO);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnOActionPerformed

    private void btnJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJActionPerformed
        Intento("J", btnJ);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnJActionPerformed

    private void btnHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHActionPerformed
        Intento("H", btnH);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnHActionPerformed

    private void btnKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKActionPerformed
        Intento("K", btnK);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnKActionPerformed

    private void btnLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLActionPerformed

        Intento("L", btnL);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnLActionPerformed

    private void btnMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMActionPerformed

        Intento("M", btnM);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnMActionPerformed

    private void btnNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNActionPerformed

        Intento("N", btnN);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnNActionPerformed

    private void btnPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPActionPerformed
        Intento("P", btnP);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnPActionPerformed

    private void btnQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQActionPerformed

        Intento("Q", btnQ);
        txtArea.setText(juego.Palabra());
    }//GEN-LAST:event_btnQActionPerformed

    private void btnSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSActionPerformed

        Intento("S", btnS);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnSActionPerformed

    private void btnTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTActionPerformed

        Intento("T", btnT);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnTActionPerformed

    private void btnVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVActionPerformed

        Intento("V", btnV);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnVActionPerformed

    private void btnGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGActionPerformed

        Intento("G", btnG);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnGActionPerformed

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        JButton[] botonesLetras = {btnA, btnB, btnC, btnD, btnE, btnF, btnG, btnH, btnI, btnK, btnL, btnM, btnN, btnO, btnP, btnQ,
            btnR, btnS, btnT, btnU, btnW, btnX, btnY, btnZ, btnJ, btnÑ, btnV};

        // Se habilitan los botones de letras al iniciar 
        for (JButton boton : botonesLetras) {
            boton.setEnabled(true);
            boton.setBackground(Color.decode("#e0e1dd"));
        }
        lblAyuda.setVisible(false);
        lblPista.setVisible(false);
        juego = new Ahorcado();
        juego.Inicio();
        txtArea.setText(juego.Palabra());

        icono = new ImageIcon(sprites[0]);
        ahorcado.setIcon(icono);

        pistaSelect = false;


    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * <h2>Este método regresa a la jugada anterior de la partida</h2>
     * Se desapila un elemento de la pila para así regresar a la acción actual y
     * se disminute el número de intentos fallidos.
     *
     * No retorna nada.
     *
     */
    private void btnRetrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrocederActionPerformed

        if (juego != null) {   //si la jugada actual es igual a la palabra a adivinar significa que el jugador ya ganó, entonces no podrá retroceder
            if (Arrays.equals(juego.palabraAux, juego.letras)) {
                JOptionPane.showMessageDialog(null, "No se puede retroceder, ya ganaste...", "Error", JOptionPane.ERROR_MESSAGE);
            } else {   //si el número de intentos fallidos llegó a su máximo significa que el jugador ya perdió y no podrá retroceder.
                if (juego.intentoActual == numIntentosMAX) {
                    JOptionPane.showMessageDialog(null, "No se puede retroceder, ya perdiste...", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    if (juego.intentoActual > 0) {   //se controla que el número de intento actual sea mayor a cero para evitar errores

                        /* si el tamaño de la pila es mayor a uno significa que se ha realizado más de una jugada, entonces se retrocederá 
                       a la jugada anterior almacenada en la pila */
                        if (juego.pila.Size() > 1) {
                            juego.pila.Desapilar();                                     //se retrocede de jugada al desapilar un elemento de la pila
                            juego.letras = ((String[]) juego.pila.Peek()).clone();      //la jugada actual se actualiza al último elemento de la pila
                            txtArea.setText(juego.Palabra());                       //se actualiza el txtArea que contiene la palabra
                            System.out.println("Pila retrocedida: " + juego.PrintPila());
                        }

                        juego.intentoActual--;                            //se disminuye el número de intentos fallidos
                        icono = new ImageIcon(sprites[juego.intentoActual]);  //se actualiza la animación a su sprite anterior
                        ahorcado.setIcon(icono);

                    } else {
                        JOptionPane.showMessageDialog(null, "No puede retroceder mas", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ni siquiera ha empezado el juego...", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnRetrocederActionPerformed

    private void btnZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZActionPerformed
        Intento("Z", btnZ);
        txtArea.setText(juego.Palabra());


    }//GEN-LAST:event_btnZActionPerformed

    private void btnWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWActionPerformed
        Intento("W", btnW);
        txtArea.setText(juego.Palabra());
    }//GEN-LAST:event_btnWActionPerformed

    private void btnXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXActionPerformed
        Intento("X", btnX);
        txtArea.setText(juego.Palabra());

    }//GEN-LAST:event_btnXActionPerformed


    private void btnPistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPistaActionPerformed

        if (juego != null) {

            if (!pistaSelect) {       //si la ayuda de pista no ha sido seleccionada antes...

                if (!juego.pila.Llena()) {  //si la pila está llena significa que el juego ya se ha terminado, entonces no se ejecuta la pista..

                    do {                    //se ejecuta el método de pista mientras la pista generada no sea igual a la jugada actual
                        Pista();
                    } while (Arrays.equals(pista, juego.letras));
                    //se termina el ciclo cuando la pista generada contiene una letra diferente a la jugada actual

                    lblPista.setVisible(true);
                    lblPista.setText(juego.Palabra(pista));
                    pistaSelect = true;         //se marca la pista como seleccionada para que así no se vuelva a usar más veces
                }

            }
        }
    }//GEN-LAST:event_btnPistaActionPerformed

    private void btnAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_btnAMouseClicked

    /**
     * <h2>Este método resetea el estado del juego al inicio</h2>
     * Se vacía la pila hasta la acción inicial en donde solo hay una letra y se
     * resetea la animación.
     *
     * No retorna nada.
     *
     */
    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed

        if (juego != null) {

            while (juego.pila.Size() > 1) {         //ciclo para vaciar la pila hasta que llegue al primer elemento en donde está la jugada inicial
                juego.pila.Desapilar();
            }
            juego.letras = ((String[]) juego.pila.Peek()).clone();     //el arreglo de letras se actualiza al primer elemento de la pila
            juego.intentoActual = 0;                                   //se resetea el número de intentos fallidos
            icono = new ImageIcon(sprites[0]);                         //se resetea la animación al primer sprite
            ahorcado.setIcon(icono);
            txtArea.setText(juego.Palabra());                      //se actualiza el txtArea que contiene la palabra
            lblPista.setVisible(false);                           //se ocultan los label de pista y ayuda
            pistaSelect = false;
            lblAyuda.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Ni siquiera ha empezado el juego...", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnLimpiarActionPerformed

    /**
     * <h2>Este método proporciona una pista al jugador</h2>
     * Se añade una letra al estado actual del juego para así dar una pequeña
     * ayuda al jugador. Se obtiene una letra aleatoria de la palabra a
     * adivinar, se comprueba que dicha letra no esté ya almacenada en la jugada
     * actual y se añade esa letra nueva al arreglo del pista el cual se imprime
     * en un label. El método es auxiliar y no afecta como tal al estado del
     * juego. No retorna nada.
     *
     */
    public void Pista() {
        Random random = new Random();                          //se utiliza el paquete random de Java para generar un número aleatorio después
        pista = ((String[]) juego.pila.Peek()).clone();        //se almacena en el arreglo de pista la última jugada

        int indiceAleatorio = 0;                                //se declara una variable para generar un índice aleatorio.
        int j = 0;                                              //contador para recorrer el arreglo de pista
        while (j <= pista.length) {                             //se realiza un ciclo mientras j sea menor a la longitud del arreglo de pista
            indiceAleatorio = random.nextInt(pista.length);  //se genera un numero aleatorio en el rango de la longitud del arreglo de pista 

            if (pista[j] != null && pista[j].equals(juego.palabraAux[indiceAleatorio])) //se comprueba que la posicion actual no sea luna y que la letra
            {                                                                            // aleatorio a adivinar no esté ya almacenada en la jugada actual
                j++;                                                                     //si la letra de ayuda está repetida se pasa a la siguiente posición del arreglo
            } else //si la letra de ayuda no se encuentra en la jugada....
            {
                pista[indiceAleatorio] = juego.palabraAux[indiceAleatorio];   //se asigna dicha letra aleatoria en su posición correspondiente en el arreglo de pista
                break;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form().setVisible(true);
            }
        });
    }

    /**
     * <h2>Este método realiza un intento del juego</h2>
     * Recibe como parámetros una cadena llamada letra y un bottón. La letra
     * recibida se buscará en la palabra a adivinar, si se encuentra se
     * almacenará en la posición correspondiente en el arreglo de letras, se
     * apilará dicho arreglo y se pintará el botón correspondiente a la letra
     * acertada. Si no ha sido encotrada la letra, se incrementará el intento
     * Actual y se actualizará el sprite. Si el arreglo de letras es igual a la
     * palabra a adivinar, el juego se termina. Si el número de intentos ha
     * llegado a su máximo, el juego termina.
     *
     * No retorna nada.
     *
     *
     * @param letra Letra que representa el intento del jugador
     * @param btn Boton correspondiente a la letra que se desea intentar
     * adivinar
     */
    public void Intento(String letra, JButton btn) {

        boolean encontrado = false;      //variable boolean auxiliar para verificar si se encontró la letra
        for (int i = 0; i < juego.letras.length; i++) {
            if (juego.palabraAux[i].equals(letra)) { //si la palabra a adivinar en la posición actual es igual la letra recibida como parámetro
                juego.letras[i] = letra;                    //las posiciones o la posición que contenga la letra serán almacenada en el arreglo de letras
                encontrado = true;
            }

        }

        if (!encontrado) {     //si la letra NO ha sido encontrada...

            juego.intentoActual++;
            if (juego.intentoActual == numIntentosMAX) {

                JOptionPane.showMessageDialog(null, "Perdiste! La palabra era: " + juego.StringArray(juego.palabraAux), "Fin", JOptionPane.ERROR_MESSAGE);
                DeshabilitarBotones();

            } else {

                icono = new ImageIcon(sprites[juego.intentoActual]);
                ahorcado.setIcon(icono);

            }
        } else {            //si la letra SI ha sido encontrada...

            btn.setBackground(Color.decode("#415a77"));                 //se pinta el botón recibido en el parámetro de verde
            if (Arrays.equals(juego.palabraAux, juego.letras)) { //si el arreglo de la palabra a adivinar es igual al arreglo del estado del juego

                //se muestra un mensaje de éxito
                JOptionPane.showMessageDialog(null, "Ganaste!", "Felicidades", JOptionPane.INFORMATION_MESSAGE);
                DeshabilitarBotones();                                 //se vacian los botones para que el jugador no pueda hacer más acciones

            }
        }

        //Comprobar si ultimo elemento de la pila no coincide con el estado actual de letras, para que asi no haya elementos repetidos en la pila
        if (!Arrays.equals(juego.letras.clone(), (String[]) juego.pila.Peek())) {
            juego.pila.Apilar(juego.letras.clone());  //se apila el estado actual del juego
            //se usa el metodo clone para obtener el estado actual del juego
        }

        System.out.println("Pila: " + juego.PrintPila());

    }

    /**
     * <h2>Este método deshabilita todos los botones</h2>
     * Método utilizado al momento de que el jugador falle o gane la partida y
     * así evitar errores. También se utiliza al cargar el formulario.
     *
     * No retorna nada.
     *
     */
    public void DeshabilitarBotones() {
        JButton[] botonesLetras = {btnA, btnB, btnC, btnD, btnE, btnF, btnG, btnH, btnI, btnK, btnL, btnM,
            btnN, btnO, btnP, btnQ, btnR, btnS, btnT, btnU, btnW, btnX, btnY, btnZ,
            btnJ, btnÑ, btnV};                                   //arreglo que contiene todos los botones representativos al alfabeto

        for (JButton boton : botonesLetras) {
            boton.setEnabled(false);                  //se deshabilita cada botón
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel ahorcado;
    private javax.swing.JButton btnA;
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnB;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnD;
    private javax.swing.JButton btnE;
    private javax.swing.JButton btnF;
    private javax.swing.JButton btnG;
    private javax.swing.JButton btnH;
    private javax.swing.JButton btnI;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnJ;
    private javax.swing.JButton btnK;
    private javax.swing.JButton btnL;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnM;
    private javax.swing.JButton btnN;
    private javax.swing.JButton btnO;
    private javax.swing.JButton btnP;
    private javax.swing.JButton btnPista;
    private javax.swing.JButton btnQ;
    private javax.swing.JButton btnR;
    private javax.swing.JButton btnRetroceder;
    private javax.swing.JButton btnS;
    private javax.swing.JButton btnT;
    private javax.swing.JButton btnU;
    private javax.swing.JButton btnV;
    private javax.swing.JButton btnW;
    private javax.swing.JButton btnX;
    private javax.swing.JButton btnY;
    private javax.swing.JButton btnZ;
    private javax.swing.JButton btnÑ;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lblAyuda;
    private javax.swing.JLabel lblPista;
    private javax.swing.JLabel txtArea;
    // End of variables declaration//GEN-END:variables
}
